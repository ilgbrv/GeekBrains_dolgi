Задача 64 Вывод натуральных чисел от M до N (рекурсия)

def print_numbers(m, n):
    if m > n:
        return  # Базовый случай: если m больше n, остановить рекурсию
    print(m, end=", " if m < n else "\n")  # Выводим число и запятую, если не последнее
    print_numbers(m + 1, n)  # Рекурсивный вызов

m = int(input("Введите M: "))
n = int(input("Введите N: "))

if m > n:
    m, n = n, m  # Меняем местами, если M больше N

print_numbers(m, n)

Введите M: 1
Введите N: 5
1, 2, 3, 4, 5

Введите M: 4
Введите N: 8
4, 5, 6, 7, 8


Задача 66: Сумма натуральных чисел от M до N (рекурсия)

def sum_range(m, n):
    if m > n:
        return 0  # Базовый случай: если m больше n, вернуть 0
    return m + sum_range(m + 1, n)  # Рекурсивно суммируем числа

m = int(input("Введите M: "))
n = int(input("Введите N: "))

if m > n:
    m, n = n, m  # Меняем местами, если M больше N

print("Сумма чисел в диапазоне:", sum_range(m, n))

Введите M: 1
Введите N: 15
Сумма чисел в диапазоне: 120

Введите M: 4
Введите N: 8
Сумма чисел в диапазоне: 30

Задача 68: Функция Аккермана (рекурсия)

def ackermann(m, n):
    if m == 0:
        return n + 1
    elif m > 0 and n == 0:
        return ackermann(m - 1, 1)
    else:
        return ackermann(m - 1, ackermann(m, n - 1))

m = int(input("Введите m: "))
n = int(input("Введите n: "))

print(f"A({m}, {n}) =", ackermann(m, n))

Введите m: 2
Введите n: 3
A(2, 3) = 29